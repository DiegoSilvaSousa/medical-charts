= simple_form_for form, as: :question, url: url, method: method do |f|
  = f.error_notification
  .row
    .input-field.col.s12
      = f.input :type, as: :select, label: false, collection: ::Rapidfire::QuestionForm::QUESTION_TYPES,
      -                   input_html: { id: 'question_type', class: 'browser-default' }
    .input-field.col.s12
      = f.input :question_text
    .input-field.col.s12
      = f.input :answer_options, as: :text, input_html: { class: 'materialize-textarea' }
  h4
    | Other options
  .row
    .input-field.col.s4
      = f.input :answer_presence, as: :boolean
    .input-field.col.s4
      = f.input :answer_minimum_length, as: :integer
    .input-field.col.s4
      = f.input :answer_maximum_length, as: :integer
    .input-field.col.s4
      = f.input :answer_greater_than_or_equal_to, as: :integer
    .input-field.col.s4
      = f.input :answer_less_than_or_equal_to, as: :integer
  = fab_to_save(back_url: question_group_questions_url)
